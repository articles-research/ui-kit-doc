{"version":3,"file":"static/css/views-Author-Author-stories.2c347be5.chunk.css","mappings":"AA0BA;AGxBA;ACwHA;AE1HA;ACsFA;AAAA;APnEA;AOmEA;AAOA;APnEA;AOmEA;AH6BA;AG7BA","sources":["webpack://frontend/./src/styles/layout.scss","webpack://frontend/./src/ui-kit/Paper/Paper.module.scss","webpack://frontend/./src/styles/colors.scss","webpack://frontend/./src/ui-kit/Avatar/Avatar.module.scss","webpack://frontend/./src/styles/typography.scss","webpack://frontend/./src/ui-kit/Button/Button.module.scss","webpack://frontend/./src/icons/icons.module.scss","webpack://frontend/./src/styles/grid.scss","webpack://frontend/./src/components/InfoCard/InfoCard.module.scss","webpack://frontend/./src/components/Card/Card.module.scss","webpack://frontend/./src/views/Author/AuthorWorks/AuthorWorks.module.scss","webpack://frontend/./src/components/Article/Article.module.scss","webpack://frontend/./src/components/TopAuthors/TopAuthors.module.scss","webpack://frontend/./src/views/Author/AuthorCoauthors/AuthorCoauthors.module.scss","webpack://frontend/./src/components/InterestsChart/InterestsChart.module.scss","webpack://frontend/./src/components/Filters/Filters.module.scss","webpack://frontend/./src/views/Author/Author.module.scss"],"sourcesContent":["%view {\n  @extend %p-2x;\n\n  min-width: rem(1280);\n  max-width: rem(1920);\n  margin: 0 auto;\n  display: grid;\n  gap: get-grid-space(3x);\n  grid-template-columns: repeat(12, 1fr);\n\n  aside {\n    grid-column: 1 / 5;\n  }\n\n  >section {\n    grid-column: 5 / 13;\n  }\n}\n\n%row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%\n}\n\n%column {\n  display: flex;\n  flex-direction: column;\n}\n","@use '../../styles' as *;\n\n.paper {\n  @extend %column;\n  border-radius: get-grid-space(4x);\n  background-color: $bg-primary;\n}\n","$txt-primary: var(--text-primary);\n$txt-secondary: var(--text-secondary);\n$txt-action: var(--text-action);\n\n$bg-primary: var(--background-primary);\n$bg-secondary: var(--background-secondary);\n$bg-action-primary: var(--background-action-primary);\n$bg-action-secondary: var(--background-action-secondary);\n\n$layer-floor-0: var(--layer-floor-0);\n","@use '../../styles' as *;\n\n.avatar {\n  display: flex;\n  border-radius: get-grid-space(2x);\n  min-width: rem(120);\n  width: rem(120);\n  height: rem(120);\n  background-image: url(./defaultAvatar.png);\n}\n","// @todo Define typography\n@use 'sass:map';\n\n$FONT_WEIGHT_NORMAL: 400;\n\n$title-fonts: (\n  level-1: (font-family: GT Eesti Pro Display,\n    font-size: rem(32),\n    font-weight: 700,\n    line-height: rem(36),\n    letter-spacing: rem(0.4),\n\n  ),\n  level-3: (font-family: GT Eesti Pro Display,\n    font-size: rem(24),\n    font-weight: 700,\n    line-height: rem(30),\n    letter-spacing: rem(0.4),\n  ),\n  level-4: (font-family: GT Eesti Pro Display,\n    font-size: rem(20),\n    font-weight: 500,\n    line-height: rem(26),\n    letter-spacing: rem(0.4),\n  ),\n  level-4-accent: (font-family: GT Eesti Pro Display,\n    font-size: rem(20),\n    font-weight: 700,\n    line-height: rem(26),\n    letter-spacing: rem(0.4),\n  ),\n);\n\n$caption-fonts: (\n  small: (font-family: GT Eesti Pro Display,\n    font-size: rem(12),\n    font-weight: 400,\n    line-height: rem(16),\n    letter-spacing: rem(0.2),\n  ),\n  small-accent: (font-family: GT Eesti Pro Display,\n    font-size: rem(12),\n    font-weight: 500,\n    line-height: rem(16),\n    letter-spacing: rem(0.2),\n  ),\n);\n\n$body-fonts: (\n  l: (\"font-size\": 16px,\n    \"line-height\": 20px,\n    \"letter-spacing\": .2px,\n    \"font-weight\": $FONT_WEIGHT_NORMAL,\n  ),\n  medium: (font-family: GT Eesti Pro Display,\n    font-size: rem(14),\n    font-weight: 400,\n    line-height: rem(18),\n    letter-spacing: rem(0.2),\n  ),\n  large: (font-family: GT Eesti Pro Display,\n    font-size: rem(16),\n    font-weight: 400,\n    line-height: rem(20),\n    letter-spacing: rem(0.2),\n\n  ),\n  large-accent: (font-family: GT Eesti Pro Display,\n    font-size: rem(16),\n    font-weight: 500,\n    line-height: rem(20),\n    letter-spacing: rem(0.2),\n  ),\n  400-small: (font-family: GT Eesti Pro Display,\n    font-size: rem(14),\n    font-weight: 400,\n    line-height: rem(20),\n    letter-spacing: rem(0.2),\n  ),\n  300-x-small: (font-family: GT Eesti Pro Display,\n    font-size: rem(12),\n    font-weight: 400,\n    line-height: rem(16),\n    letter-spacing: rem(0.2),\n  ),\n);\n\n$body-compact-fonts: (\n  control-500-medium: (font-family: GT Eesti Pro Display,\n    font-size: rem(16),\n    font-weight: 500,\n    line-height: rem(20),\n    letter-spacing: rem(0.2),\n  ),\n  control-400-small: (font-family: GT Eesti Pro Display,\n    font-size: rem(14),\n    font-weight: 500,\n    line-height: rem(16),\n    letter-spacing: rem(0.2),\n  ),\n  400-large: (font-family: GT Eesti Pro Display,\n    font-size: rem(14),\n    font-weight: 400,\n    line-height: rem(18),\n    letter-spacing: rem(0.2),\n  )\n);\n\n$headline-fonts: (\n  400-small: (font-family: GT Eesti Pro Display,\n    font-size: rem(16),\n    font-weight: 700,\n    line-height: rem(20),\n    letter-spacing: rem(0.2),\n  ),\n);\n\n@function get-class-name($type, $size) {\n  @return #{$type}-#{$size};\n}\n\n@each $prop, $values in $body-fonts {\n  %#{get-class-name(body, $prop)} {\n    font-weight: map.get($values, \"font-weight\");\n    font-size: map.get($values, \"font-size\");\n    line-height: map.get($values, \"line-height\");\n    letter-spacing: map.get($values, \"letter-spacing\");\n  }\n}\n\n@each $prop, $values in $headline-fonts {\n  %#{get-class-name(headline, $prop)} {\n    font-size: map.get($values, 'font-size');\n    font-weight: map.get($values, 'font-weight');\n    line-height: map.get($values, 'line-height');\n    letter-spacing: map.get($values, 'letter-spacing');\n  }\n}\n\n@each $prop, $values in $body-compact-fonts {\n  %#{get-class-name(body-compact, $prop)} {\n    font-size: map.get($values, 'font-size');\n    font-weight: map.get($values, 'font-weight');\n    line-height: map.get($values, 'line-height');\n    letter-spacing: map.get($values, 'letter-spacing');\n  }\n}\n\n@each $prop, $values in $caption-fonts {\n  %#{get-class-name(caption, $prop)} {\n    font-size: map.get($values, 'font-size');\n    font-weight: map.get($values, 'font-weight');\n    line-height: map.get($values, 'line-height');\n    letter-spacing: map.get($values, 'letter-spacing');\n  }\n}\n\n@each $prop, $values in $title-fonts {\n  %#{get-class-name(title, $prop)} {\n    font-size: map.get($values, 'font-size');\n    font-weight: map.get($values, 'font-weight');\n    line-height: map.get($values, 'line-height');\n    letter-spacing: map.get($values, 'letter-spacing');\n  }\n}","@use '../../styles/index.scss' as *;\n\n.uiKit {\n  &.button {\n    @extend %body-l;\n\n    border: rem(2) solid transparent;\n    outline: none;\n\n    &.rectangle {\n      padding: rem(8) rem(16);\n      border-radius: rem(12);\n    }\n\n    &.square {\n      padding: rem(12);\n      border-radius: rem(16);\n    }\n\n    &.secondary {\n      background-color: #f0f2f5; // hsla(216, 100%, 24%, 0.04);\n      color: hsla(0, 0%, 0%, 0.72);\n    }\n\n    &.primary {\n      background-color: $bg-action-primary;\n      color: hsla(0, 0%, 100%, 0.92);\n    }\n\n    &.none {\n      background-color: #f0f2f5; // hsla(216, 100%, 24%, 0.04);\n      color: hsla(0, 0%, 0%, 0.72);\n    }\n\n    &.light {\n      background-color: $bg-action-secondary;\n      color: $txt-action;\n    }\n\n    &.strong {\n      background-color: $bg-action-primary;\n      color: hsla(0, 0%, 100%, 0.92);\n    }\n\n    &.icon {\n      background-color: transparent;\n      padding: 0;\n      border: none;\n      border-radius: rem(16);\n    }\n\n    &.disabled {\n      cursor: not-allowed;\n\n      &.secondary {\n        color: rgba(0, 0, 0, 0.26);\n        border: rem(1) solid rgba(0, 0, 0, 0.12);\n      }\n\n      &.primary {\n        color: rgba(0, 0, 0, 0.26);\n        box-shadow: none;\n        background-color: rgba(0, 0, 0, 0.12);\n      }\n    }\n  }\n}\n",".icon {\n  fill: currentColor;\n}\n\n.shapeIcon {\n  stroke: currentColor;\n}","// @todo Define grid system\n@use \"sass:math\";\n@use \"sass:map\";\n@use \"sass:list\";\n@use \"sass-rem\" as rem;\n\n$browser-context: 16;\n\n@function rem($pixels, $context: $browser-context) {\n  @return rem.convert($pixels * 1px);\n}\n\n$grid-space: math.div($browser-context, 2);\n\n$grid-spaces: (\n  0x: 0px,\n  quarterX: rem.convert(math.div($grid-space, 4)),\n  halfX: rem.convert($grid-space * 0.5px),\n  1x: rem.convert($grid-space * 1px),\n  2x: rem.convert($grid-space * 2 * 1px),\n  3x: rem.convert($grid-space * 3 * 1px),\n  4x: rem.convert($grid-space * 4 * 1px),\n  5x: rem.convert($grid-space * 5 * 1px),\n  6x: rem.convert($grid-space * 6 * 1px),\n  7x: rem.convert($grid-space * 7 * 1px),\n  8x: rem.convert($grid-space * 8 * 1px),\n);\n\n@function get-grid-space($grid-size) {\n  @return map.get($grid-spaces, $grid-size);\n}\n\n$paddings: (\n  m: \"margin\",\n  p: \"padding\",\n);\n$directions: (\n  t: \"top\",\n  b: \"bottom\",\n  l: \"left\",\n  r: \"right\",\n);\n\n@function get-grid-space-name($padding-type,\n  $direction-type,\n  $spacer-type,\n  $negative: false) {\n  $negative-prefix: \"\";\n\n  @if $negative ==true {\n    $negative-prefix: \"n\";\n  }\n\n  @if $direction-type ==all {\n    @return #{$padding-type}-#{$negative-prefix}#{$spacer-type};\n  }\n\n  @else {\n    @return #{$padding-type}#{$direction-type}-#{$negative-prefix}#{$spacer-type};\n  }\n}\n\n@mixin get-grid-space($padding-type,\n  $direction-type,\n  $spacer-type,\n  $negative: false) {\n  $padding-value: map.get($paddings, $padding-type);\n  $direction-value: map.get($directions, $direction-type);\n  $space-value: map.get($grid-spaces, $spacer-type);\n  $selector: get-grid-space-name($padding-type,\n      $direction-type,\n      $spacer-type,\n      $negative );\n\n  @if $negative ==true {\n    $space-value: -$space-value;\n  }\n\n  @if $direction-type ==y {\n    %#{$selector} {\n      #{$padding-value}-top: $space-value;\n      #{$padding-value}-bottom: $space-value;\n    }\n  }\n\n  @else if $direction-type ==x {\n    %#{$selector} {\n      #{$padding-value}-left: $space-value;\n      #{$padding-value}-right: $space-value;\n    }\n  }\n\n  @else if $direction-type ==all {\n    %#{$selector} {\n      #{$padding-value}: $space-value;\n    }\n  }\n\n  @else {\n    %#{$selector} {\n      #{$padding-value}-#{$direction-value}: $space-value;\n    }\n  }\n}\n\n$-directions: t, b, l, r, x, y, all;\n$-negatives: true, false;\n\n@each $direction in $-directions {\n  @each $prop in map.keys($paddings) {\n    @each $is-negative in $-negatives {\n      @each $size in map.keys($grid-spaces) {\n        @include get-grid-space($prop, $direction, $size, $is-negative);\n      }\n    }\n  }\n}","@use '../../styles' as *;\n\n.card {\n  @extend %p-3x;\n  @extend %column;\n\n  gap: get-grid-space(2x);\n}\n\n.header {\n  @extend %row;\n\n  gap: get-grid-space(2x);\n}\n\n.info {\n  @extend %column;\n\n  width: 100%;\n  gap: get-grid-space(1x);\n}\n\n.name {\n  @extend %title-level-1;\n\n  &::first-letter {\n    text-transform: capitalize;\n  }\n}\n\n.status {\n  @extend %body-large;\n}\n\n.description {\n  @extend %body-medium;\n  color: $txt-secondary;\n\n  &::first-letter {\n    text-transform: capitalize;\n  }\n}\n\n.statistics {\n  @extend %column;\n  gap: get-grid-space(1x);\n}\n\n.statistic {\n  @extend %row;\n}\n\n.label {\n  @extend %body-medium;\n  flex: 1,\n}\n\n.relative {\n  @extend %px-1x;\n  @extend %row;\n  @extend %body-medium;\n  position: relative;\n  background-color: $bg-secondary;\n  width: 80%;\n  height: get-grid-space(3x);\n  margin-left: auto;\n  border-radius: get-grid-space(3x);\n}\n\n.percentile {\n  position: absolute;\n  background-color: $bg-action-secondary;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  border-radius: get-grid-space(2x);\n}\n\n.absolute {\n  position: absolute;\n}\n\n.contacts {\n  @extend %row;\n  gap: get-grid-space(1x);\n\n  .share {\n    margin-left: auto;\n  }\n}\n","@use '../../styles' as *;\n\n.card {\n  @extend %py-2x;\n  @extend %px-3x;\n\n  position: relative;\n  overflow: hidden;\n\n  &.disabled {\n    pointer-events: none;\n    filter: blur(rem(2));\n    opacity: .7;\n    user-select: none;\n  }\n}\n\n.header {\n  @extend %row;\n\n  color: $txt-primary;\n  cursor: pointer;\n}\n\n.title {\n  @extend %title-level-4;\n\n  flex: 1\n}\n\n.toggler {\n  transition: all .3s ease-in-out;\n}","@use '../../../styles' as *;\n\n.works {\n  @extend %column;\n\n  padding: 0;\n  gap: get-grid-space(3x);\n}\n\n.loader {\n  @extend %row;\n\n  justify-content: center;\n}\n\n.loading {\n  filter: blur(rem(2));\n}\n","@use '../../styles' as *;\n\n.articleItem {\n  @extend %column;\n\n  gap: rem(4);\n}\n\n.header {\n  @extend %row;\n  @extend %caption-small;\n\n  gap: get-grid-space(1x);\n}\n\n.date {\n  color: $txt-primary;\n}\n\n.fieldOfStudy {\n  color: $txt-secondary;\n\n  &::first-letter {\n    text-transform: capitalize;\n  }\n\n  &::after {\n    content: ',',\n  }\n\n  &:last-child {\n    &::after {\n      content: '',\n    }\n  }\n}\n\n.title {\n  @extend %body-large-accent;\n\n  cursor: pointer;\n\n  &::first-letter {\n    text-transform: capitalize;\n  }\n}\n\n.footer {\n  @extend %row;\n\n  gap: get-grid-space(1x);\n}\n\n.citeCount {\n  @extend %row;\n  @extend %caption-small-accent;\n\n  flex: 0;\n  color: $txt-primary;\n}\n\n.authors {\n  @extend %row;\n  @extend %caption-small;\n\n  color: $txt-secondary;\n  gap: get-grid-space(1x);\n}\n\n.author {\n  &::first-letter {\n    text-transform: capitalize;\n  }\n}\n\n.authorsCount {\n  @extend %px-halfX;\n\n  border-radius: rem(2);\n  background-color: $bg-secondary;\n}\n","@use '../../styles' as *;\n\n.authors {\n  @extend %p-3x;\n\n  gap: get-grid-space(1x);\n}\n\n.header {\n  @extend %row;\n\n  color: $txt-primary;\n  gap: get-grid-space(1x);\n}\n\n.title {\n  @extend %title-level-4-accent;\n  margin-right: auto;\n}\n\n.content {}\n","@use '../../../styles' as *;\n\n.coauthors {\n  @extend %column;\n\n  gap: get-grid-space(2x);\n}\n\n.loading {\n  filter: blur(rem(2));\n}\n","@use '../../styles' as *;\n\n.chart {\n  @extend %p-3x;\n\n  height: rem(280);\n}","@use '../../styles' as *;\n\n.filter {\n  @extend %column;\n\n  gap: get-grid-space(2x);\n}\n\n.header {\n  @extend %row;\n  @extend %title-level-3;\n\n  align-items: baseline;\n  color: $txt-primary;\n  gap: get-grid-space(1x);\n\n  .sort {\n    @extend %body-medium;\n    pointer-events: none;\n    filter: blur(rem(2));\n    user-select: none;\n    display: flex;\n    color: $txt-action;\n    text-decoration: none;\n    gap: get-grid-space(halfX);\n  }\n}\n","@use '../../styles' as *;\n\n.view {\n  @extend %view;\n}\n\n.info {\n  @extend %column;\n\n  gap: get-grid-space(2x);\n}\n\n.content {\n  @extend %column;\n\n  gap: get-grid-space(3x);\n}\n\n.filterResults {\n  @extend %row;\n\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  align-items: start;\n  gap: get-grid-space(2x);\n}\n\n.works {\n  grid-column: 1 / 6;\n}\n\n.coauthors {\n  grid-column: 6 / 9;\n}\n"],"names":[],"sourceRoot":""}